@page "/movies/create"
@inject NavigationManager NavManager
@inject IMoviesRepository moviesRepository
@inject ICountryRepository countryRepository
@inject IGenreRepository genreRepository
@inject ICategoryRepository categoryRepository
@inject IPartitionRepository partitionRepository

<PageTitle>@allMeta.Title</PageTitle>

<MetaContent MetaData="allMeta" />

<BreadcrumbArea>
    <TitleContent>
        <h2 class="title">Додати <span>відео</span></h2>
    </TitleContent>
    <ChildContent>
        <li class="breadcrumb-item"><a href="">Домівка</a></li>
        <li class="breadcrumb-item"><a href="Home/movies">Відео</a></li>
        <li class="breadcrumb-item active" aria-current="page">Додати відео</li>
    </ChildContent>
</BreadcrumbArea>

<!-- contact-area -->
    <section class="contact-area contact-bg" style="background-image: url('img/contact_bg.jpg')">
        <div class="container">
            <div class="row">
                <div class="col-xl-12 col-lg-11">
                    <div class="contact-form-wrap">
                        <div class="widget-title mb-50">
                            <h5 class="title">Додати відео</h5>
                        </div>
                        <div class="contact-form">
                            @if (NotSelectedCountries != null)
                            {
                                <MovieForm Movie="Movie" OnValidSubmit="SaveMovie"
                                           NotSelectedGenres="NotSelectedGenres" NotSelectedCountries="NotSelectedCountries"
                                           CategoryList="CategoryList" AllPartitions="AllPartitions" />
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>
<!-- contact-area-end -->

@code {
    OpenGraphModel allMeta = new OpenGraphModel();
    private Movie Movie = new Movie();
    private List<Country> NotSelectedCountries;
    private List<Genre> NotSelectedGenres;
    private List<Category> CategoryList;
    private List<Partition> AllPartitions;

    protected async override Task OnInitializedAsync()
    {
        allMeta.Title = "Додати відео :: Український медійний архів 'KLIO'";
        allMeta.Description = "Медійний архів 'KLIO': Музика, література, історія, фільми, мультфільми, серіали, мультсеріали, наживо, пряма трансляція, дивитися он-лайн";
        allMeta.Robots = "all";
        allMeta.Author = "Eugene Baklanov";
        allMeta.Keywords = "Klio, архів, video, відео, історія, література, політика, музика, music, наживо, трансляція, пряма трансляція, дивитися он-лайн, фільм, серіал, сезон, епізод, мультфільм, мультсерал";
        allMeta.Type = "article";
        allMeta.Image = (NavManager.BaseUri + "img/WatchTVMockup.jpg").Replace("https://", "http://");
        allMeta.SecureImage = (NavManager.BaseUri + "img/WatchTVMockup.jpg").Replace("http://", "https://");
        allMeta.ImageWidth = 1920;
        allMeta.ImageHeight = 1077;
        allMeta.ImageType = "image/jpeg";
        allMeta.Url = NavManager.Uri;
        allMeta.SiteName = "Медійний архів 'KLIO'";
        allMeta.Locale = "uk_UA";
        allMeta.FBAdmins = "100007730161243,100002204709179";
        allMeta.FBAppId = "885986785210347";
        allMeta.Image2 = (NavManager.BaseUri + "img/logo_750_transp.png").Replace("https://", "http://");
        allMeta.SecureImage2 = (NavManager.BaseUri + "img/logo_750_transp.png").Replace("http://", "https://");
        allMeta.ImageWidth2 = 750;
        allMeta.ImageHeight2 = 750;
        allMeta.ImageType2 = "image/png";

        try
        {
            NotSelectedCountries = await countryRepository.GetCountries();
            NotSelectedGenres = await genreRepository.GetGenres();
            AllPartitions = await partitionRepository.GetPartitions();
            CategoryList = await categoryRepository.GetAllCategories();
        }
        catch (Exception ex)
        {
            
        }
    }

    private async Task SaveMovie()
    {
        Movie.PublicDate = DateTime.Now;

        try
        {
            var movieId = await moviesRepository.CreateMovie(Movie);
            NavManager.NavigateTo($"movie/{movieId}/{StringUtilities.Translit(Movie.Title)}");
        }
        catch (Exception ex)
        {
            
            throw;
        }
    }
}
