@attribute [StreamRendering]
@inject SingletonService singleton
@inject TransientService transient
@inject IJSRuntime js

<p>Singleton count: @singleton.Value</p>
<p>Transient count: @transient.Value</p>

<MoviesList Movies="Movies" />

<button class="btn" @onclick="AddNewMovie">Add new movie</button>

<button class="btn" @onclick="AddNewMovieJavaScript">Add JavaScript</button>

@code {
    [Parameter] public List<Movie> Movies { get; set; }
    private static int moviesCounet = 0;

    [JSInvokable]
    public async Task AddNewMovie()
    {
        Movies.Add(new Movie() { Title = "Movie Sample", ReleaseDate = DateTime.Today });
        transient.Value = Movies.Count;
        singleton.Value = Movies.Count;
        moviesCounet = Movies.Count;
        await js.InvokeVoidAsync("dotnetStaticInvocation");
    }

    private async Task AddNewMovieJavaScript()
    {
        await js.InvokeVoidAsync("dotnetInstanceInvocation", DotNetObjectReference.Create(this));
    }

    [JSInvokable]
    public static Task<int> GetCurrentCount()
    {
        return Task.FromResult(moviesCounet);
    }
}
