@inject IJSRuntime js
@rendermode @(new InteractiveServerRenderMode(prerender: false))
@attribute [StreamRendering]

<label><input type="checkbox" @bind="displayButtons" />Display Buttons</label>

<GenericList List="Movies">
    <ElementTemplate Context="movie">
        <IndividualMovie Movie="movie" DisplayButtons="displayButtons" DeleteMovie="DeleteMovie" />
    </ElementTemplate>
</GenericList>

<Confirmation @ref="confirmation" OnCancel="OnCancel" OnConfirm="OnConfirm">
    <div>Ви впевнені, що хочете видалити фільм: "@movieToBeDeleted.Title"?</div>
</Confirmation>

@code {
    [Parameter] public List<Movie> Movies { get; set; }
    bool displayButtons = true;
    Confirmation confirmation;
    Movie movieToBeDeleted;

    private async Task DeleteMovie(Movie movie)
    {
        movieToBeDeleted = movie;
        confirmation.Show();

        // await js.MyFunction("custom message");
        // var confirm = await js.Confirm($"Ви впевнені, що хочете видалити фільм \"{movie.Title}\"?");

        // if (confirm)
        // {
        //     Movies.Remove(movie);
        // }
    }

    void OnConfirm()
    {
        Movies.Remove(movieToBeDeleted);
        confirmation.Hide();
        movieToBeDeleted = null;
    }

    void OnCancel()
    {
        confirmation.Hide();
        movieToBeDeleted = null;
    }

    protected override void OnInitialized()
    {
        Console.WriteLine("OnInitialized. Movies.Count = " + Movies.Count.ToString());
    }

    protected override void OnParametersSet()
    {
        Console.WriteLine("OnParametersSet. Movies.Count = " + Movies.Count.ToString());
    }

    protected override void OnAfterRender(bool firstRender)
    {
        Console.WriteLine("OnAfterRender. FirstRender = " + firstRender.ToString());
    }

    protected override bool ShouldRender()
    {
        return true;
    }
}
