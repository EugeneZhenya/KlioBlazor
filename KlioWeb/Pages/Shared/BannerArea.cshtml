@model BannerArea

@{
    if (Model.ShowMovie.MovieInfos.FirstOrDefault(x => x.Info == "OriginalTitle") != null)
    {
        Model.OriginalTitle = Model.ShowMovie.MovieInfos.FirstOrDefault(x => x.Info == "OriginalTitle").Text;
    }
}

<section class="movie-details-area" style="background-image: url('@($"{Model.appState.KlioContentUrl}movies/{Model.ShowMovie.Id}/background.jpg")')">
    <div class="movie-details-overlay">
        <div class="container custom-container" style="padding: 175px 15px 120px;">
            <div class="row">
                <div class="col-xl-6 col-lg-8">
                    <div class="banner-content">
                        <div class="section-title title-style-two">
                            <span class="sub-title">@Model.ShowMovie.Partition.Category.Name</span>
                        </div>
                        <h6 class="sub-title"><a href="partition/@Model.ShowMovie.Partition.Id/@StringUtilities.Translit(Model.ShowMovie.Partition.Name)">@Model.ShowMovie.Partition.Name</a></h6>
                        <h2 class="title">
                            @for (int i = 0; i < SeparateTitle(Model.ShowMovie.Title).Length; i++)
                            {
                                if (i % 2 == 0)
                                {
                                    @SeparateTitle(Model.ShowMovie.Title)[i]
                                }
                                else
                                {
                                    <span>@SeparateTitle(Model.ShowMovie.Title)[i]</span>
                                }
                            }
                        </h2>
                        @if (!string.IsNullOrEmpty(Model.OriginalTitle))
                        {
                            <h3 style="margin-bottom: 20px;">
                                @for (int i = 0; i < SeparateTitle(Model.OriginalTitle).Length; i++)
                                {
                                    if (i % 2 == 0)
                                    {
                                        <span style="color: #e4e2e2;">@SeparateTitle(Model.OriginalTitle)[i]</span>
                                    }
                                    else
                                    {
                                        <span style="color: #fd0e30;">@SeparateTitle(Model.OriginalTitle)[i]</span>
                                    }
                                }
                            </h3>
                        }
                        <div class="banner-meta">
                            <ul>
                                <li class="quality">
                                    <span style="@AgeLimitColor(Model.ShowMovie.AgeLimit)">@Model.ShowMovie.AgeLimit+</span>
                                </li>
                                <li class="category">
                                    @for (int i = 0; i < Model.ShowMovie.MoviesGenres.Count; i++)
                                    {
                                        if (i == Model.ShowMovie.MoviesGenres.Count - 1)
                                        {
                                            <a href="genre/@Model.ShowMovie.MoviesGenres[i].Genre.Id/@StringUtilities.Translit(Model.ShowMovie.MoviesGenres[i].Genre.Name)">@Model.ShowMovie.MoviesGenres[i].Genre.Name</a>
                                        }
                                        else
                                        {
                                            <a href="genre/@Model.ShowMovie.MoviesGenres[i].Genre.Id/@StringUtilities.Translit(Model.ShowMovie.MoviesGenres[i].Genre.Name)">@Model.ShowMovie.MoviesGenres[i].Genre.Name,</a>
                                        }
                                    }
                                </li>
                                <li class="release-time">
                                    <span><i class="fa-solid fa-calendar-days"></i> @Model.ShowMovie.ReleaseDate.Value.Year</span>
                                    <span><i class="fa-solid fa-clock"></i> @StringUtilities.SecondsToMinutes(Model.ShowMovie.Duration)</span>
                                </li>
                            </ul>
                        </div>
                        <div class="banner-meta">
                            <ul>
                                <li class="category">
                                    @foreach (var country in Model.ShowMovieCountries)
                                    {
                                        <img src="@($"{Model.appState.KlioContentUrl}countries/{country.FlagUrl}")" alt="@country.Name" style="width: 25px; margin: 0 5px 0 10px;" />
                                        <a href="country/@country.Id/@StringUtilities.Translit(@country.Name)">@country.Name</a>
                                    }
                                </li>
                            </ul>
                        </div>
                        @if (Model.ShowMovie.HasTrailer)
                        {
                            <a class="banner-btn btn popup-video" style="cursor: pointer">
                                <i class="fa-solid fa-play"></i> Вістовик
                            </a>
                        }
                    </div>
                </div>
                <div class="col-xl-6 col-lg-4 d-flex align-items-center justify-content-center position-relative">
                    <a href="@($"movie/{Model.ShowMovie.Id}/{StringUtilities.Translit(Model.ShowMovie.Title)}")" class="glightbox play-btn"></a>
                </div>
            </div>

            @if (Model.ShowMovie.HasTrailer)
            {
                <TrailerModal TrailerUrl="@($"{Model.appState.KlioContentUrl}movies/{Model.ShowMovie.Id}/Trailer/index.m3u8")" TrailerCover="@($"{Model.appState.KlioContentUrl}movies/{Model.ShowMovie.Id}/Trailer/cover.jpg")" />
            }
        </div>
    </div>
</section>

@functions {
    string[] SeparateTitle(string title)
    {
        return StringUtilities.SeparateString(title);
    }

    string AgeLimitColor(int age)
    {
        string style = "color: lightgreen; border-color: lightgreen;";
        switch (age)
        {
            case 12:
                style = "color: sandybrown; border-color: sandybrown;";
                break;

            case 16:
                style = "color: orange; border-color: orange;";
                break;

            case 18:
                style = "color: maroon; border-color: maroon;";
                break;

            default:
                style = "color: lightgreen; border-color: lightgreen;";
                break;
        }

        return style;
    }
}